apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istio         # имя CR
  namespace: istio-system
  labels:
    app.kubernetes.io/managed-by: Helm
spec:
  hub: docker.io/istio
  tag: 1.17.1

  meshConfig:
    ingressControllerMode: 'DEFAULT'
    defaultConfig:
      holdApplicationUntilProxyStarts: true
      tracing: {}
      proxyMetadata:
        BOOTSTRAP_XDS_AGENT: "true"
      proxyStatsMatcher:
        inclusionRegexps:
        - mongo.*
    extensionProviders:
    - name: zipkin-jaeger
      zipkin:
        service: jaeger-operator-jaeger-collector.jaeger-operator.svc.cluster.local
        port: 9411
    outboundTrafficPolicy:
      mode: ALLOW_ANY
    defaultServiceExportTo: 
      - '.'
      - 'istio-ingress'         # экспорт во входящий ns
    defaultVirtualServiceExportTo: 
      - '.'
    defaultDestinationRuleExportTo: 
      - '.'
    enablePrometheusMerge: false 
    enableTracing: true
    accessLogFile: /dev/stdout
    accessLogEncoding: JSON
    accessLogFormat: |
      {
        "@timestamp": "%START_TIME%",
        "trace_id": "%REQ(X-B3-TRACEID)%",
        "span_id": "%REQ(X-B3-SPANID)%",
        "r_method": "%REQ(:METHOD)%",
        "request_uri": "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%",
        "response_time": "%DURATION%",
        "request_time": "%REQ(x-envoy-upstream-service-time)%",
        "response_code": "%RESPONSE_CODE%",
        "authority": "%REQ(:AUTHORITY)%",
        "x_forwarded_for": "%REQ(X-FORWARDED-FOR)%",
        "user_agent": "%REQ(USER-AGENT)%",
        "message": "Request path: %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% method: %REQ(:METHOD)% response_code: %RESPONSE_CODE%"
      }

  values:
    pilot:
      autoscaleEnabled: false
      env:
        PILOT_ENABLE_MONGO_FILTER: true
    gateways:
      istio-ingressgateway:
        autoscaleEnabled: false
      istio-egressgateway:
        autoscaleEnabled: false
    sidecarInjectorWebhook:
      neverInjectSelector:
        - matchExpressions:
          - {key: job-name, operator: Exists}
    global:
      proxy:
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            memory: "1Gi"
        tracer: "none"

  components:
    base:
      enabled: true
    cni:
      enabled: true
      k8s:
        tolerations: []
    istiodRemote:
      enabled: false

    pilot:
      enabled: true
      k8s:
        replicaCount: 2
        resources:
          requests:
            cpu: "500m"
            memory: "2Gi"
          limits:
            memory: "4Gi"
        nodeSelector: 
          node.kubernetes.io/role: infra
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app: istiod
                      operator.istio.io/component: Pilot
                  topologyKey: kubernetes.io/hostname

    ingressGateways:
    - name: istio-ingressgateway
      namespace: istio-ingress
      label:
        app: ingressgateway
        istio: ingressgateway
      enabled: true          # истина по умолчанию (при желании переключите)
      k8s:
        service:
          type: NodePort
          ports:
            - port: 80
              targetPort: 8080
              nodePort: 30020
              protocol: TCP
              name: http
            - port: 443
              targetPort: 8443
              nodePort: 30021
              protocol: TCP
              name: https
            - port: 9090
              targetPort: 15021
              nodePort: 30023
              protocol: TCP
              name: status-port
          # externalIPs можно добавить при необходимости
        replicaCount: 2
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            memory: "1Gi"
        strategy:
          rollingUpdate:
            maxUnavailable: 1
        nodeSelector:
          node.kubernetes.io/role: infra

    egressGateways:
    - name: istio-egressgateway
      namespace: istio-egress
      label:
        app: egressgateway
        istio: egressgateway
      enabled: false         # выключено по умолчанию
      k8s:
        replicaCount: 2
        service:
          ports:
            - port: 80
              targetPort: 8080
              protocol: TCP
              name: http
            - port: 443
              targetPort: 8443
              protocol: TCP
              name: https
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            memory: "1Gi"
        strategy:
          rollingUpdate:
            maxUnavailable: 1
        nodeSelector:
          node.kubernetes.io/role: infra
