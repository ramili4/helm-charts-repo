apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-installer-scripts
data:
  install-istio.sh: |
    #!/bin/sh
    set -e

    # образ curlimages основан на Alpine → добавим tar
    apk add --no-cache tar

    echo "=== Istio binary installer ==="
    echo "Version: ${ISTIO_VERSION}"
    echo "URL:     ${DOWNLOAD_URL}"

    mkdir -p /tmp/istio-${ISTIO_VERSION}
    cd       /tmp/istio-${ISTIO_VERSION}

    echo "* Downloading istioctl..."
    curl -sSL "${DOWNLOAD_URL}" -o istioctl.tar.gz
    tar -xzf istioctl.tar.gz
    chmod +x istioctl
    ...


    echo "* Installing Istio (istioctl install)..."
    ./istioctl install -f /manifests/istio-operator.yml -y --revision "${ISTIO_VERSION}"

    {{- if .Values.istio.ingressgatewayEnabled }}
    echo "* Applying default gateway..."
    kubectl apply -f /manifests/istio-default-gateway.yml
    {{- end }}

    {{- if .Values.istio.prometheusScrape }}
    echo "* Applying ServiceMonitor..."
    kubectl apply -f /manifests/istio-scrapping-sm.yml
    {{- end }}

    {{- if .Values.istio.cpuLimitsDisabled }}
    echo "* Patching sidecar injector (CPU limits off)..."
    kubectl patch -f /manifests/istio-sidecar-injector.yaml \
                  --patch-file /manifests/istio-sidecar-injector.yaml
    {{- end }}

    echo "* Restarting istiod..."
    kubectl rollout restart deployment/istiod -n istio-system
    kubectl rollout status  deployment/istiod -n istio-system --timeout=300s

    echo "=== Istio installation completed ==="
