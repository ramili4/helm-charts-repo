apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-installer-scripts
data:
  install-istio.sh: |
    #!/bin/sh
    set -e

    # curl уже есть в образе curlimages, нужен только tar
    apk add --no-cache tar

    ISTIO_VERSION="{{ .Values.global.istio.version }}"
    DOWNLOAD_URL="{{ .Values.global.istio.downloadUrl }}"

    echo "=== Istio binary installer ==="
    echo "Version: ${ISTIO_VERSION}"
    echo "URL:     ${DOWNLOAD_URL}"

    mkdir -p /tmp/istio-${ISTIO_VERSION}
    cd       /tmp/istio-${ISTIO_VERSION}

    echo "* Downloading istioctl..."
    curl -sSL "${DOWNLOAD_URL}" -o istioctl.tar.gz

    echo "* Extracting..."
    tar -xzf istioctl.tar.gz

    # Если бинарь в подпапке — переносим
    if [ ! -f ./istioctl ]; then
      mv istioctl-*/bin/istioctl ./ || {
        echo "❌ istioctl binary not found after extraction"
        exit 1
      }
    fi
    chmod +x istioctl

    echo "* Installing Istio..."
    ./istioctl install -f /manifests/istio-operator.yml -y

    {{- if .Values.istio.ingressgatewayEnabled }}
    kubectl apply -f /manifests/istio-default-gateway.yml
    {{- end }}

    {{- if .Values.istio.prometheusScrape }}
    kubectl apply -f /manifests/istio-scrapping-sm.yml
    {{- end }}

    {{- if .Values.istio.cpuLimitsDisabled }}
    kubectl patch -f /manifests/istio-sidecar-injector.yaml \
                  --patch-file /manifests/istio-sidecar-injector.yaml
    {{- end }}

    kubectl rollout restart deployment/istiod -n istio-system
    kubectl rollout status  deployment/istiod -n istio-system --timeout=300s
    echo "✅ Istio installation completed"
